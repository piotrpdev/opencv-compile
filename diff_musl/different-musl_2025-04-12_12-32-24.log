#0 building with "default" instance using docker driver

#1 [internal] load build definition from different-musl.Dockerfile
#1 transferring dockerfile: 7.25kB done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/ubuntu:22.04
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/9] FROM docker.io/library/ubuntu:22.04
#4 DONE 0.0s

#5 [6/9] RUN set -xeu &&     mkdir -p /root/dist &&     curl -sSfL "https://github.com/opencv/opencv/archive/refs/tags/4.8.0.tar.gz" | tar xz -C /root/dist
#5 CACHED

#6 [2/9] RUN set -xeu && 	DEBIAN_FRONTEND=noninteractive apt-get update && 	DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential curl clang libclang-dev cmake pkg-config musl-tools musl-dev libstdc++-12-dev
#6 CACHED

#7 [4/9] RUN set -xu && 	curl -sSfL "https://musl.cc/x86_64-linux-musl-cross.tgz" | tar xz -C /root/ && 	rustup target add x86_64-unknown-linux-musl
#7 CACHED

#8 [3/9] RUN set -xeu &&     curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile=minimal
#8 CACHED

#9 [5/9] RUN set -xeu && 	cargo new /root/app && 	echo "opencv = { version = "0.93.3", default-features = false }" >> /root/app/Cargo.toml && 	echo "use opencv::prelude::*; use opencv::core; fn main() {}" > /root/app/src/main.rs
#9 CACHED

#10 [7/9] RUN set -xeu &&     mkdir -p /root/build && 	cmake -D CMAKE_SHARED_LINKER_FLAGS="-static -static-libgcc -static-libstdc++" -B /root/build -S "/root/dist/opencv-4.8.0" -D CMAKE_INSTALL_PREFIX=/opt/opencv     	-D BUILD_CUDA_STUBS=OFF     	-D BUILD_DOCS=OFF     	-D BUILD_EXAMPLES=OFF     	-D BUILD_IPP_IW=OFF     	-D BUILD_ITT=OFF     	-D BUILD_JASPER=OFF     	-D BUILD_JAVA=OFF     	-D BUILD_JPEG=OFF     	-D BUILD_OPENEXR=OFF     	-D BUILD_PERF_TESTS=OFF     	-D BUILD_PNG=OFF     	-D BUILD_PROTOBUF=OFF     	-D BUILD_SHARED_LIBS=OFF     	-D BUILD_TBB=OFF     	-D BUILD_TESTS=OFF     	-D BUILD_TIFF=OFF     	-D BUILD_WEBP=OFF     	-D BUILD_WITH_DYNAMIC_IPP=OFF     	-D BUILD_ZLIB=OFF 		-D PARALLEL_ENABLE_PLUGINS=OFF 		-D OPJ_USE_THREAD=OFF 		-D BUILD_opencv_alphamat=OFF 		-D BUILD_opencv_aruco=OFF 		-D BUILD_opencv_bgsegm=OFF 		-D BUILD_opencv_bioinspired=OFF 		-D BUILD_opencv_calib3d=OFF 		-D BUILD_opencv_ccalib=OFF 		-D BUILD_opencv_core=ON 		-D BUILD_opencv_datasets=OFF 		-D BUILD_opencv_dnn=OFF 		-D BUILD_opencv_dnn_objdetect=OFF 		-D BUILD_opencv_dnn_superres=OFF 		-D BUILD_opencv_dpm=OFF 		-D BUILD_opencv_face=OFF 		-D BUILD_opencv_features2d=OFF 		-D BUILD_opencv_flann=OFF 		-D BUILD_opencv_fuzzy=OFF 		-D BUILD_opencv_gapi=OFF 		-D BUILD_opencv_hfs=OFF 		-D BUILD_opencv_highgui=OFF 		-D BUILD_opencv_img_hash=OFF 		-D BUILD_opencv_imgcodecs=OFF 		-D BUILD_opencv_imgproc=OFF 		-D BUILD_opencv_intensity_transform=OFF 		-D BUILD_opencv_java_bindings_generator=OFF 		-D BUILD_opencv_js_bindings_generator=OFF 		-D BUILD_opencv_line_descriptor=OFF 		-D BUILD_opencv_mcc=OFF 		-D BUILD_opencv_ml=OFF 		-D BUILD_opencv_objc_bindings_generator=OFF 		-D BUILD_opencv_objdetect=OFF 		-D BUILD_opencv_optflow=OFF 		-D BUILD_opencv_phase_unwrapping=OFF 		-D BUILD_opencv_photo=OFF 		-D BUILD_opencv_plot=OFF 		-D BUILD_opencv_python_bindings_generator=OFF 		-D BUILD_opencv_python_tests=OFF 		-D BUILD_opencv_quality=OFF 		-D BUILD_opencv_rapid=OFF 		-D BUILD_opencv_reg=OFF 		-D BUILD_opencv_rgbd=OFF 		-D BUILD_opencv_saliency=OFF 		-D BUILD_opencv_sfm=OFF 		-D BUILD_opencv_shape=OFF 		-D BUILD_opencv_stereo=OFF 		-D BUILD_opencv_stitching=OFF 		-D BUILD_opencv_structured_light=OFF 		-D BUILD_opencv_superres=OFF 		-D BUILD_opencv_surface_matching=OFF 		-D BUILD_opencv_text=OFF 		-D BUILD_opencv_tracking=OFF 		-D BUILD_opencv_video=OFF 		-D BUILD_opencv_videoio=OFF 		-D BUILD_opencv_videostab=OFF 		-D BUILD_opencv_wechat_qrcode=OFF 		-D BUILD_opencv_xfeatures2d=OFF 		-D BUILD_opencv_ximgproc=OFF 		-D BUILD_opencv_xobjdetect=OFF 		-D BUILD_opencv_xphoto=OFF 		-D BUILD_opencv_freetype=OFF     	-D BUILD_opencv_apps=OFF     	-D BUILD_opencv_python2=OFF     	-D BUILD_opencv_python3=OFF     	-D CMAKE_BUILD_TYPE=Release     	-D ENABLE_CONFIG_VERIFICATION=OFF     	-D CV_ENABLE_INTRINSICS=ON     	-D ENABLE_PIC=OFF     	-D INSTALL_CREATE_DISTRIB=OFF     	-D INSTALL_PYTHON_EXAMPLES=OFF     	-D INSTALL_C_EXAMPLES=OFF     	-D INSTALL_TESTS=OFF     	-D OPENCV_ENABLE_NONFREE=OFF     	-D OPENCV_FORCE_3RDPARTY_BUILD=OFF     	-D OPENCV_GENERATE_PKGCONFIG=OFF     	-D PROTOBUF_UPDATE_FILES=OFF 		-D OPENCV_DNN_OPENCL=OFF 		-D OPENCV_DNN_TFLITE=OFF 		-D OPENCV_TEST_DNN_TFLITE=OFF     	-D WITH_1394=OFF     	-D WITH_ADE=OFF     	-D WITH_ARAVIS=OFF     	-D WITH_CLP=OFF     	-D WITH_CUBLAS=OFF     	-D WITH_CUDA=OFF     	-D WITH_CUFFT=OFF     	-D WITH_EIGEN=OFF     	-D WITH_FFMPEG=OFF 		-D WITH_FLATBUFFERS=OFF 		-D WITH_FREETYPE=OFF     	-D WITH_GDAL=OFF     	-D WITH_GDCM=OFF     	-D WITH_GIGEAPI=OFF     	-D WITH_GPHOTO2=OFF     	-D WITH_GSTREAMER=OFF     	-D WITH_GSTREAMER_0_10=OFF     	-D WITH_GTK=OFF     	-D WITH_GTK_2_X=OFF     	-D WITH_HALIDE=OFF     	-D WITH_IMGCODEC_HDcR=OFF 		-D WITH_IMGCODEC_HDR=OFF     	-D WITH_IMGCODEC_PXM=OFF 		-D WITH_IMGCODEC_PFM=OFF     	-D WITH_IMGCODEC_SUNRASTER=OFF     	-D WITH_INF_ENGINE=OFF     	-D WITH_IPP=OFF     	-D WITH_ITT=OFF     	-D WITH_JASPER=OFF     	-D WITH_JPEG=OFF     	-D WITH_LAPACK=OFF     	-D WITH_LIBV4L=OFF     	-D WITH_MATLAB=OFF     	-D WITH_MFX=OFF     	-D WITH_NVCUVID=OFF     	-D WITH_OPENCL=OFF     	-D WITH_OPENCLAMDBLAS=OFF     	-D WITH_OPENCLAMDFFT=OFF     	-D WITH_OPENCL_SVM=OFF     	-D WITH_OPENEXR=OFF     	-D WITH_OPENGL=OFF     	-D WITH_OPENMP=OFF     	-D WITH_OPENNI2=OFF     	-D WITH_OPENNI=OFF     	-D WITH_OPENVX=OFF 		-D WITH_OBSENSOR=OFF 		-D WITH_OPENJPEG=OFF     	-D WITH_PNG=OFF     	-D WITH_PROTOBUF=OFF     	-D WITH_PTHREADS_PF=OFF     	-D WITH_PVAPI=OFF 		-D WITH_TESSERACT=OFF     	-D WITH_QT=OFF     	-D WITH_QUIRC=OFF     	-D WITH_TBB=OFF     	-D WITH_TIFF=OFF 		-D WITH_ZLIB=OFF     	-D WITH_UNICAP=OFF     	-D WITH_V4L=OFF     	-D WITH_VA=OFF     	-D WITH_VA_INTEL=OFF     	-D WITH_VTK=OFF     	-D WITH_WEBP=OFF     	-D WITH_XIMEA=OFF     	-D WITH_XINE=OFF &&     make -C /root/build -j`nproc` install
#10 CACHED

#11 [8/9] RUN set -xu && 	cd /root/app && 	RUSTFLAGS="-C linker=/root/x86_64-linux-musl-cross/bin/x86_64-linux-musl-ld -C link-args=-lstdc++" cargo build --release --target=x86_64-unknown-linux-musl
#11 0.303 + cd /root/app
#11 0.304 + RUSTFLAGS=-C linker=/root/x86_64-linux-musl-cross/bin/x86_64-linux-musl-ld -C link-args=-lstdc++ cargo build --release --target=x86_64-unknown-linux-musl
#11 0.368     Updating crates.io index
#11 2.493      Locking 48 packages to latest Rust 1.86.0 compatible versions
#11 2.496       Adding opencv v0.93.7 (available: v0.94.4)
#11 2.511  Downloading crates ...
#11 2.768   Downloaded num-traits v0.2.19
#11 2.833   Downloaded autocfg v1.4.0
#11 2.837   Downloaded percent-encoding v2.3.1
#11 2.853   Downloaded glob v0.3.2
#11 2.855   Downloaded pkg-config v0.3.32
#11 2.866   Downloaded dunce v1.0.5
#11 2.868   Downloaded jobserver v0.1.33
#11 2.871   Downloaded shlex v1.3.0
#11 2.885   Downloaded semver v1.0.26
#11 2.891   Downloaded once_cell v1.21.3
#11 2.902   Downloaded clang-sys v1.8.1
#11 2.906   Downloaded clang v2.0.0
#11 2.911   Downloaded cc v1.2.19
#11 2.918   Downloaded memchr v2.7.4
#11 2.929   Downloaded opencv-binding-generator v0.93.0
#11 2.946   Downloaded aho-corasick v1.1.3
#11 2.954   Downloaded vcpkg v0.2.15
#11 3.023   Downloaded regex v1.11.1
#11 3.044   Downloaded regex-syntax v0.8.5
#11 3.056   Downloaded regex-automata v0.4.9
#11 3.080   Downloaded libc v0.2.171
#11 3.127   Downloaded opencv v0.93.7
#11 3.230    Compiling libc v0.2.171
#11 3.230    Compiling glob v0.3.2
#11 3.231    Compiling memchr v2.7.4
#11 3.232    Compiling regex-syntax v0.8.5
#11 3.232    Compiling semver v1.0.26
#11 3.233    Compiling shlex v1.3.0
#11 3.234    Compiling autocfg v1.4.0
#11 3.236    Compiling dunce v1.0.5
#11 3.238    Compiling once_cell v1.21.3
#11 3.238    Compiling percent-encoding v2.3.1
#11 3.239    Compiling vcpkg v0.2.15
#11 3.239    Compiling pkg-config v0.3.32
#11 3.565    Compiling clang-sys v1.8.1
#11 3.568    Compiling num-traits v0.2.19
#11 3.858    Compiling aho-corasick v1.1.3
#11 4.177    Compiling jobserver v0.1.33
#11 4.313    Compiling cc v1.2.19
#11 4.411    Compiling clang v2.0.0
#11 5.002    Compiling regex-automata v0.4.9
#11 6.692    Compiling regex v1.11.1
#11 6.952    Compiling opencv-binding-generator v0.93.0
#11 8.931    Compiling opencv v0.93.7
#11 35.59    Compiling app v0.1.0 (/root/app)
#11 35.61 warning: unused import: `opencv::prelude::*`
#11 35.61  --> src/main.rs:1:5
#11 35.61   |
#11 35.61 1 | use opencv::prelude::*; use opencv::core; fn main() {}
#11 35.61   |     ^^^^^^^^^^^^^^^^^^
#11 35.61   |
#11 35.61   = note: `#[warn(unused_imports)]` on by default
#11 35.61 
#11 35.61 warning: unused import: `opencv::core`
#11 35.61  --> src/main.rs:1:29
#11 35.61   |
#11 35.61 1 | use opencv::prelude::*; use opencv::core; fn main() {}
#11 35.61   |                             ^^^^^^^^^^^^
#11 35.61 
#11 35.95 warning: `app` (bin "app") generated 2 warnings (run `cargo fix --bin "app"` to apply 2 suggestions)
#11 35.95     Finished `release` profile [optimized] target(s) in 37.24s
#11 DONE 36.0s

#12 [9/9] RUN set -xu && 	cd /root/app && 	file target/x86_64-unknown-linux-musl/release/app && 	ldd target/x86_64-unknown-linux-musl/release/app
#12 0.424 + cd /root/app
#12 0.424 + file target/x86_64-unknown-linux-musl/release/app
#12 0.426 /bin/sh: 1: file: not found
#12 ERROR: process "/bin/sh -c set -xu && \tcd /root/app && \tfile target/x86_64-unknown-linux-musl/release/app && \tldd target/x86_64-unknown-linux-musl/release/app" did not complete successfully: exit code: 127
------
 > [9/9] RUN set -xu && 	cd /root/app && 	file target/x86_64-unknown-linux-musl/release/app && 	ldd target/x86_64-unknown-linux-musl/release/app:
0.424 + cd /root/app
0.424 + file target/x86_64-unknown-linux-musl/release/app
0.426 /bin/sh: 1: file: not found
------
different-musl.Dockerfile:208
--------------------
 207 |     
 208 | >>> RUN set -xu && \
 209 | >>> 	cd /root/app && \
 210 | >>> 	file target/x86_64-unknown-linux-musl/release/app && \
 211 | >>> 	ldd target/x86_64-unknown-linux-musl/release/app
 212 |     
--------------------
ERROR: failed to solve: process "/bin/sh -c set -xu && \tcd /root/app && \tfile target/x86_64-unknown-linux-musl/release/app && \tldd target/x86_64-unknown-linux-musl/release/app" did not complete successfully: exit code: 127
